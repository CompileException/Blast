<?xml version="1.0" encoding="utf-8"?>
<XPJ version="4">

<template name="commonBase">
	<FloatingPointModel>Fast</FloatingPointModel>
	<!--CharacterSet>MultiByte</CharacterSet-->
	<ExceptionHandling>Async</ExceptionHandling>
	<WarningLevel>3</WarningLevel>
	<DebugInformationFormat>Zi</DebugInformationFormat>
	<GenerateDebugInformation>true</GenerateDebugInformation>
	<CFlags>
	</CFlags>
	<LFlags>
		/SUBSYSTEM:WINDOWS
		/NOLOGO
	</LFlags>
	<Preprocessor type="define">
		__GFSDK_DX11__
		UNICODE
		_UNICODE
		CC_LIB
		THISFILENAME="$(TargetFileName)"
		WIN32
		QT_LARGEFILE_SUPPORT
		QT_CORE_LIB
		QT_GUI_LIB
		QT_WIDGETS_LIB
		QT_DLL
		NV_ARTISTTOOLS
		NV_FOUNDATION_DLL=0
	</Preprocessor>
	<SearchPaths root="" type="header">
		${env:D3D11_ROOT}/include
		${env:QTDIR}/../include
		${env:FBXSDK_ROOT}/include
		${env:NVTOOLSEXT}/include
		${env:NvFoundation_ROOT}/include
		${env:NsFoundation_ROOT}/include
		${env:NvParameterized_ROOT}/src
		${env:NvParameterized_ROOT}/include
		${env:NsFileBuffer_ROOT}/include
		${env:NsFastXML_ROOT}/include
		${env:OpenAutomate_ROOT}/inc
		${env:SDL_ROOT}/include
		${env:NVCOMMON_ROOT}
		${env:DXUT_PATH}/Core
		${env:DXUT_PATH}/Optional
		${env:DIRECTXTEX_PATH}/include
		..\Generated\BlastPlugin\ui
		..\Generated\BlastPlugin\$(PlatformName)
		..\Generated\CoreLib\ui
		..\Generated\CoreLib\$(PlatformName)
		..\..\source\CoreLib
		..\..\source\CoreLib\Anim
		..\..\source\CoreLib\Backdoor
		..\..\source\CoreLib\Parameters
		..\..\source\CoreLib\Render
		..\..\source\CoreLib\Render\D3D11
		..\..\source\CoreLib\Render\D3D12
		..\..\source\CoreLib\Render\Interface
		..\..\source\CoreLib\Scene
		..\..\source\CoreLib\Utils
		..\..\source\CoreLib\Window
		..\..\source\BlastPlugin
		..\..\source\BlastPlugin\Render
		..\..\source\BlastPlugin\Render\D3D11
		..\..\source\BlastPlugin\Render\D3D12
		..\..\source\BlastPlugin\Render\Interface
		..\..\source\BlastPlugin\Scene
		..\..\source\BlastPlugin\Window
		..\..\source\BlastPlugin\Parameters
		..\..\source\BlastPlugin\SampleBase
		..\..\source\BlastPlugin\SampleBase\core
		..\..\source\BlastPlugin\SampleBase\blast
		..\..\source\BlastPlugin\SampleBase\physx
		..\..\source\BlastPlugin\SampleBase\renderer
		..\..\source\BlastPlugin\SampleBase\scene
		..\..\source\BlastPlugin\SampleBase\ui
		..\..\source\BlastPlugin\SampleBase\utils
	</SearchPaths>

	<SearchPaths root="" type="library">
		$(OutDir)
	</SearchPaths>
	<Libraries>
		d3d11.lib
		d3dcompiler.lib
		dxerr.lib
		dxguid.lib
		dxgi.lib
		d3dx11.lib
		comctl32.lib
		Shlwapi.lib
		SDL2.lib
		Usp10.lib
		Version.lib
		Imm32.lib
		DbgHelp.lib
	</Libraries>
</template>

<template name="debugBase">
	<Preprocessor type="define">
		DEBUG
		_DEBUG
	</Preprocessor>
	<RuntimeLibrary>3</RuntimeLibrary>
	<Optimization>0</Optimization>
	<!--Optimization 0=disable, 1=MinSpace, 2=MaxSpeed, 3=full -->
	<WholeProgramOptimization>NoWholeProgramOptimization</WholeProgramOptimization>
	<LFlags>
	</LFlags>
	<Libraries>
		qtmaind.lib
		Qt5Cored.lib
		Qt5Guid.lib
		Qt5Widgetsd.lib
		Qt5Xmld.lib
	</Libraries>
</template>

<template name="releaseBase">
	<Preprocessor type="define">
		NDEBUG
		QT_NO_DEBUG
	</Preprocessor>
	<RuntimeLibrary>2</RuntimeLibrary>
	<Optimization>2</Optimization>
	<!--Optimization 0=disable, 1=MinSpace, 2=MaxSpeed, 3=full -->
	<WholeProgramOptimization>UseLinkTimeCodeGeneration</WholeProgramOptimization>
	<LFlags>
	</LFlags>
	<Libraries>
		qtmain.lib
		Qt5Core.lib
		Qt5Gui.lib
		Qt5Widgets.lib
		Qt5Xml.lib
	</Libraries>
</template>

<template name="win32Base">
	<apply-template name="commonBase"/>
	<Preprocessor type="define">
	</Preprocessor>
	<SearchPaths root="" type="library">
		$(OutDir)
		${env:QTDIR}/x86/lib
		${env:D3D11_ROOT}/lib/x86
		${env:SDL_ROOT}/Lib/x86
		${env:SHADOWLIB_PATH}/lib/win32
		${env:HBAOPLUS_PATH}/lib/win32
	</SearchPaths>
	<Libraries>
		GFSDK_ShadowLib_DX11.win32.lib
		GFSDK_SSAO_D3D11.win32.lib
	</Libraries>
</template>

<template name="win64Base">
	<apply-template name="commonBase"/>
	<Preprocessor type="define">
		_WIN64
		WIN64
	</Preprocessor>
	<SearchPaths root="" type="library">
		$(OutDir)
		${env:QTDIR}/x64/lib
		${env:D3D11_ROOT}/lib/x64
		${env:SDL_ROOT}/Lib/x64
		${env:SHADOWLIB_PATH}/lib/win64
		${env:HBAOPLUS_PATH}/lib/win64
	</SearchPaths>
	<Libraries>
		GFSDK_ShadowLib_DX11.win64.lib
		GFSDK_SSAO_D3D11.win64.lib
	</Libraries>
</template>

<template name="blast_header_path">
	<SearchPaths type="header">
		${env:PX_SHARED}/include
		${env:PX_SHARED}/include/filebuf
		${env:PX_SHARED}/include/foundation
		${env:PX_SHARED}/include/task
		${env:PX_SHARED}/include/cudamanager
		${env:PX_SHARED}/include/pvd
		${env:PX_SHARED}/src/foundation/include
		${env:PX_SHARED}/src/filebuf/include
		${env:PX_SHARED}/src/fastxml/include
		${env:PX_SHARED}/src/pvd/include
		${env:PHYSX_PATH}/Include
		${env:PHYSX_PATH}/Include/common
		${env:PHYSX_PATH}/Include/cooking
		${env:PHYSX_PATH}/Include/extensions
		${env:PHYSX_PATH}/Include/geometry
		${env:PHYSX_PATH}/Include/gpu
		${env:PHYSX_PATH}/Include/deformable
		${env:PHYSX_PATH}/Include/particles
		${env:PHYSX_PATH}/Include/characterkinematic
		${env:PHYSX_PATH}/Include/characterdynamic
		${env:PHYSX_PATH}/Include/vehicle
		${env:PHYSX_PATH}/Source/GeomUtils/headers
		${env:PHYSX_PATH}/Source/PhysXGpu/include
		${env:BLAST_PATH}/sdk/common
		${env:BLAST_PATH}/sdk/extensions/authoring/include
		${env:BLAST_PATH}/sdk/extensions/authoring/source
		${env:BLAST_PATH}/sdk/extensions/common/include
		${env:BLAST_PATH}/sdk/extensions/import/include
		${env:BLAST_PATH}/sdk/extensions/lowlevel/include
		${env:BLAST_PATH}/sdk/extensions/physx/include
		${env:BLAST_PATH}/sdk/extensions/serialization/include
		${env:BLAST_PATH}/sdk/extensions/shaders/include
		${env:BLAST_PATH}/sdk/extensions/utils/include
		${env:BLAST_PATH}/sdk/extensions/stress/include
		${env:BLAST_PATH}/sdk/extensions/exporter/include
		${env:BLAST_PATH}/sdk/extensions/assetutils/include
		${env:BLAST_PATH}/sdk/lowlevel/include
		${env:BLAST_PATH}/sdk/profiler
		${env:BLAST_PATH}/sdk/toolkit/include
		${env:BLAST_PATH}/sdk/globals/include
		${env:BLAST_PATH}/sdk/lowlevel/source
		${env:BLAST_PATH}/sdk/toolkit/source
		${env:BLAST_PATH}/shared/utils
		${env:IMGUI_PATH}
		${env:TINYOBJ_PATH}
		${env:TCLAP_PATH}/include
		${env:SHADOWLIB_PATH}/include
		${env:HBAOPLUS_PATH}/include
	</SearchPaths>
</template>
	
<Project name="ArtistTools">
<Export platform="multiple">..\${env:VS_STRING}</Export>
<Target name="ArtistTools">
	<Dependencies type="link">
		RenderBlastDx11
	</Dependencies>
	<Configuration name="default" type="exe" show="false">
		<OutDir>..\..\..\..\bin\${env:VC_VERSION}win$(PlatformArchitecture)-cmake</OutDir>
	    <INTDIR>..\..\..\..\obj\${env:VC_VERSION}win$(PlatformArchitecture)-cmake\$(Configuration)\ArtistTools</INTDIR>
	</Configuration>

	<Configuration name="Debug" platform="Win32">
		<apply-template name="win32Base"/>
		<apply-template name="debugBase"/>
	    <OutFile>$(ProjectName).win32.d.exe</OutFile>
		<SearchPaths root="" type="library">
			${env:FBXSDK_LIB_ROOT}/x86/debug
		</SearchPaths>
		<Libraries>
			CoreLib.win32.d.lib
			
		</Libraries>
	</Configuration>

	<Configuration name="Debug" platform="win64">
		<apply-template name="win64Base"/>
		<apply-template name="debugBase"/>
	    <OutFile>$(ProjectName).win64.d.exe</OutFile>
		<SearchPaths root="" type="library">
			${env:FBXSDK_LIB_ROOT}/x64/debug
		</SearchPaths>
		<Libraries>
			CoreLib.win64.d.lib
			
		</Libraries>
	</Configuration>

	<Configuration name="Release" platform="Win32">
		<apply-template name="win32Base"/>
		<apply-template name="releaseBase"/>
	    <OutFile>$(ProjectName).win32.exe</OutFile>
		<SearchPaths root="" type="library">
			${env:FBXSDK_LIB_ROOT}/x86/release
		</SearchPaths>
		<Libraries>
			CoreLib.win32.lib
			
		</Libraries>
	</Configuration>

	<Configuration name="Release" platform="win64">
		<apply-template name="win64Base"/>
		<apply-template name="releaseBase"/>
	    <OutFile>$(ProjectName).win64.exe</OutFile>
		<SearchPaths root="" type="library">
			${env:FBXSDK_LIB_ROOT}/x64/release
		</SearchPaths>
		<Libraries>
			CoreLib.win64.lib
			
		</Libraries>
	</Configuration>

	<PostBuildEvent>
		CALL ..\script\ArtistTools-PostBuild.bat $(OutDir) $(Platform) $(Configuration) ${env:QTDIR} ${env:VC_VERSION}
	</PostBuildEvent>

	<Files name="App" root="..\..\source\ArtistTools">
		main.cpp
	</Files>
	<Files name="Resource" root="..\..\project\Resource">
		resource.rc
	</Files>
</Target>
	
<Target name="CoreLib">
	<Libraries>
		libfbxsdk-md.lib
	</Libraries>
	<Configuration name="default" type="dll" show="false">
		<OutDir>..\..\..\..\bin\${env:VC_VERSION}win$(PlatformArchitecture)-cmake</OutDir>
	    <INTDIR>..\..\..\..\obj\${env:VC_VERSION}win$(PlatformArchitecture)-cmake\$(Configuration)\CoreLib</INTDIR>
		<Preprocessor type="define">
			CORELIB_LIB
		</Preprocessor>
	</Configuration>

	<Configuration name="Debug" platform="Win32">
		<apply-template name="win32Base"/>
		<apply-template name="debugBase"/>
	    <OutFile>$(ProjectName).win32.d.dll</OutFile>
		<SearchPaths root="" type="library">
			${env:FBXSDK_LIB_ROOT}/x86/debug
			${env:NVTOOLSEXT}/lib/Win32
		</SearchPaths>
		<Libraries>
			nvToolsExt32_1.lib
		</Libraries>
	</Configuration>

	<Configuration name="Debug" platform="win64">
		<apply-template name="win64Base"/>
		<apply-template name="debugBase"/>
	    <OutFile>$(ProjectName).win64.d.dll</OutFile>
		<SearchPaths root="" type="library">
			${env:FBXSDK_LIB_ROOT}/x64/debug
			${env:NVTOOLSEXT}/lib/x64
		</SearchPaths>
		<Libraries>
			nvToolsExt64_1.lib
		</Libraries>
	</Configuration>

	<Configuration name="Release" platform="Win32">
		<apply-template name="win32Base"/>
		<apply-template name="releaseBase"/>
	    <OutFile>$(ProjectName).win32.dll</OutFile>
		<SearchPaths root="" type="library">
			${env:FBXSDK_LIB_ROOT}/x86/release
			${env:NVTOOLSEXT}/lib/Win32
		</SearchPaths>
		<Libraries>
			nvToolsExt32_1.lib
		</Libraries>
	</Configuration>

	<Configuration name="Release" platform="win64">
		<apply-template name="win64Base"/>
		<apply-template name="releaseBase"/>
	    <OutFile>$(ProjectName).win64.dll</OutFile>
		<SearchPaths root="" type="library">
			${env:FBXSDK_LIB_ROOT}/x64/release
			${env:NVTOOLSEXT}/lib/x64
		</SearchPaths>
		<Libraries>
			nvToolsExt64_1.lib
		</Libraries>
	</Configuration>
	
	<Files name="App" root="..\..\source\CoreLib">
		Parameters/*.h
		Parameters/*.cpp
		Parameters/*.pl
		Anim/*.h
		Anim/*.cpp
		Backdoor/*.h
		Backdoor/*.cpp
		*.h
		*.cpp
		Render/Interface/*.h
		Render/Interface/*.cpp
		Render/*.h
		Render/*.cpp
		Scene/*.h
		Scene/*.cpp
		UI/*.ui
		UI/*.qrc
		Utils/*.h
		Utils/*.cpp
		Window/*.h
		Window/*.cpp
	</Files>
	<Files name="NsFoundation" root="${env:NsFoundation_ROOT}">
		src/*.cpp
		src/windows/*.cpp
	</Files>
	<Files name="NvFoundation" root="${env:NvFoundation_ROOT}">
		include/*.h
	</Files>
	<Files name="NvParameterized" root="${env:NvParameterized_ROOT}">
		src/*.cpp
	</Files>
	<Files name="NsFastXML" root="${env:NsFastXML_ROOT}">
		src/*.cpp
	</Files>
	<Files name="NvCommon" root="${env:NVCOMMON_ROOT}\Nv\Common">
		NvCoMemoryAllocator.h
		NvCoMemoryAllocator.cpp
		Platform/Win/NvCoWinMemoryAllocator.h
		Platform/Win/NvCoWinMemoryAllocator.cpp
		Animation/NvCoFrameCalculator.h
		Animation/NvCoFrameCalculator.cpp
	</Files>
	<Files name="Generated" root="..\Generated\CoreLib">
		ui/*.h
		moc/*.cpp
		qrc/*.cpp
	</Files>
	<Files name="Shaders" root="..\..\source\Shaders">
		BodyShader.hlsl
		BodyShaderCommon.hlsl
		BodyShadow.hlsl
		color.hlsl
		Light.hlsl
		ScreenQuad.hlsl
		ScreenQuadColor.hlsl
		VisualizeShadow.hlsl
	</Files>
	<Files name="OpenAutomate" root="${env:OpenAutomate_ROOT}">
		inc/*.h
		src/*.c
	</Files>
</Target>

<Target name="PluginBlast">
	<Libraries>
		libfbxsdk-md.lib
		DXUT.lib
		DirectXTex.lib
		DXUTOpt.lib
	</Libraries>
	<Dependencies type="link">
		RenderPluginDx11
	</Dependencies>
	<Configuration name="default" type="dll" show="false">
		<OutDir>..\..\..\..\bin\${env:VC_VERSION}win$(PlatformArchitecture)-cmake</OutDir>
	    <INTDIR>..\..\..\..\obj\${env:VC_VERSION}win$(PlatformArchitecture)-cmake\$(Configuration)\PluginBlast</INTDIR>
		<Preprocessor type="define">
			PLUGINBT_LIB
			_WINDOWS
			_WIN32_WINNT=0x0600
			_CRT_SECURE_NO_DEPRECATE
			_LIB
		</Preprocessor>
		<SearchPaths root="" type="library">
			${env:PX_SHARED}/lib/${env:VC_VERSION}win$(PlatformArchitecture)-cmake
			${env:PHYSX_PATH}/Lib/${env:VC_VERSION}win$(PlatformArchitecture)-cmake
			${env:BLAST_PATH}/lib/${env:VC_VERSION}win$(PlatformArchitecture)-cmake
		</SearchPaths>
	</Configuration>

	<Configuration name="Debug" platform="Win32">
		<apply-template name="win32Base"/>
		<apply-template name="debugBase"/>
	    <OutFile>$(ProjectName).win32.d.dll</OutFile>
		<SearchPaths root="" type="library">
			${env:FBXSDK_LIB_ROOT}/x86/debug
			${env:DIRECTXTEX_PATH}/bin/dynamiccrt/${env:VS_STRING}/Win32/Debug
			${env:DXUT_PATH}/Core/Bin/dynamiccrt/${env:VS_STRING}/Win32/Debug
			${env:DXUT_PATH}/Optional/Bin/dynamiccrt/${env:VS_STRING}/Win32/Debug
		</SearchPaths>
		<Libraries>
			CoreLib.win32.d.lib
			PhysX3CommonDEBUG_x86.lib
			PhysX3DEBUG_x86.lib
			PhysX3CookingDEBUG_x86.lib
			PhysX3ExtensionsDEBUG_x86.lib
			PxPvdSDKDEBUG_x86.lib
			PxTaskDEBUG_x86.lib
			PxFoundationDEBUG_x86.lib
			PsFastXmlDEBUG_x86.lib
			NvBlastDEBUG_x86.lib
			NvBlastExtAuthoringDEBUG_x86.lib
			NvBlastExtImportDEBUG_x86.lib
			NvBlastExtPhysXDEBUG_x86.lib
			NvBlastExtShadersDEBUG_x86.lib
			NvBlastTkDEBUG_x86.lib
			NvBlastExtExporterDEBUG_x86.lib
			NvBlastExtAssetUtilsDEBUG_x86.lib
			NvBlastGlobalsDEBUG_x86.lib
			GFSDK_ShadowLib_DX11.win32.lib
			GFSDK_SSAO_D3D11.win32.lib
		</Libraries>
		<conditional value="${env:VC_VERSION}" match="vc14">
		<Libraries>
			NvBlastExtSerializationDEBUG_x86.lib
			NvBlastExtPxSerializationDEBUG_x86.lib
			NvBlastExtTkSerializationDEBUG_x86.lib
		</Libraries>
		</conditional>
	</Configuration>

	<Configuration name="Debug" platform="win64">
		<apply-template name="win64Base"/>
		<apply-template name="debugBase"/>
	    <OutFile>$(ProjectName).win64.d.dll</OutFile>
		<SearchPaths root="" type="library">
			${env:FBXSDK_LIB_ROOT}/x64/debug
			${env:DIRECTXTEX_PATH}/bin/dynamiccrt/${env:VS_STRING}/x64/Debug
			${env:DXUT_PATH}/Core/Bin/dynamiccrt/${env:VS_STRING}/x64/Debug
			${env:DXUT_PATH}/Optional/Bin/dynamiccrt/${env:VS_STRING}/x64/Debug
		</SearchPaths>
		<Libraries>
			CoreLib.win64.d.lib
			PhysX3CommonDEBUG_x64.lib
			PhysX3DEBUG_x64.lib
			PhysX3CookingDEBUG_x64.lib
			PhysX3ExtensionsDEBUG_x64.lib
			PxPvdSDKDEBUG_x64.lib
			PxTaskDEBUG_x64.lib
			PxFoundationDEBUG_x64.lib
			PsFastXmlDEBUG_x64.lib
			NvBlastDEBUG_x64.lib
			NvBlastExtAuthoringDEBUG_x64.lib
			NvBlastExtImportDEBUG_x64.lib
			NvBlastExtPhysXDEBUG_x64.lib
			NvBlastExtShadersDEBUG_x64.lib
			NvBlastTkDEBUG_x64.lib
			NvBlastExtExporterDEBUG_x64.lib
			NvBlastExtAssetUtilsDEBUG_x64.lib
			NvBlastGlobalsDEBUG_x64.lib
			GFSDK_ShadowLib_DX11.win64.lib
			GFSDK_SSAO_D3D11.win64.lib
		</Libraries>
		<conditional value="${env:VC_VERSION}" match="vc14">
		<Libraries>
			NvBlastExtSerializationDEBUG_x64.lib
			NvBlastExtPxSerializationDEBUG_x64.lib
			NvBlastExtTkSerializationDEBUG_x64.lib
		</Libraries>
		</conditional>
	</Configuration>

	<Configuration name="Release" platform="Win32">
		<apply-template name="win32Base"/>
		<apply-template name="releaseBase"/>
	    <OutFile>$(ProjectName).win32.dll</OutFile>
		<SearchPaths root="" type="library">
			${env:FBXSDK_LIB_ROOT}/x86/release
			${env:DIRECTXTEX_PATH}/bin/dynamiccrt/${env:VS_STRING}/Win32/Release
			${env:DXUT_PATH}/Core/Bin/dynamiccrt/${env:VS_STRING}/Win32/Release
			${env:DXUT_PATH}/Optional/Bin/dynamiccrt/${env:VS_STRING}/Win32/Release
		</SearchPaths>
		<Libraries>
			CoreLib.win32.lib
			PhysX3Common_x86.lib
			PhysX3_x86.lib
			PhysX3Cooking_x86.lib
			PhysX3Extensions_x86.lib
			PxPvdSDK_x86.lib
			PxTask_x86.lib
			PxFoundation_x86.lib
			PsFastXml_x86.lib
			NvBlast_x86.lib
			NvBlastExtAuthoring_x86.lib
			NvBlastExtImport_x86.lib
			NvBlastExtPhysX_x86.lib
			NvBlastExtShaders_x86.lib
			NvBlastTk_x86.lib
			NvBlastExtExporter_x86.lib
			NvBlastExtAssetUtils_x86.lib
			NvBlastGlobals_x86.lib
			GFSDK_ShadowLib_DX11.win32.lib
			GFSDK_SSAO_D3D11.win32.lib
		</Libraries>
		<conditional value="${env:VC_VERSION}" match="vc14">
		<Libraries>
			NvBlastExtSerialization_x86.lib
			NvBlastExtPxSerialization_x86.lib
			NvBlastExtTkSerialization_x86.lib
		</Libraries>
		</conditional>
	</Configuration>

	<Configuration name="Release" platform="win64">
		<apply-template name="win64Base"/>
		<apply-template name="releaseBase"/>
	    <OutFile>$(ProjectName).win64.dll</OutFile>
		<SearchPaths root="" type="library">
			${env:FBXSDK_LIB_ROOT}/x64/release
			${env:DIRECTXTEX_PATH}/bin/dynamiccrt/${env:VS_STRING}/x64/Release
			${env:DXUT_PATH}/Core/Bin/dynamiccrt/${env:VS_STRING}/x64/Release
			${env:DXUT_PATH}/Optional/Bin/dynamiccrt/${env:VS_STRING}/x64/Release
		</SearchPaths>
		<Libraries>
			CoreLib.win64.lib
			PhysX3Common_x64.lib
			PhysX3_x64.lib
			PhysX3Cooking_x64.lib
			PhysX3Extensions_x64.lib
			PxPvdSDK_x64.lib
			PxTask_x64.lib
			PxFoundation_x64.lib
			PsFastXml_x64.lib
			NvBlast_x64.lib
			NvBlastExtAuthoring_x64.lib
			NvBlastExtImport_x64.lib
			NvBlastExtPhysX_x64.lib
			NvBlastExtShaders_x64.lib
			NvBlastTk_x64.lib
			NvBlastExtExporter_x64.lib
			NvBlastExtAssetUtils_x64.lib
			NvBlastGlobals_x64.lib
			GFSDK_ShadowLib_DX11.win64.lib
			GFSDK_SSAO_D3D11.win64.lib
		</Libraries>
		<conditional value="${env:VC_VERSION}" match="vc14">
		<Libraries>
			NvBlastExtSerialization_x64.lib
			NvBlastExtPxSerialization_x64.lib
			NvBlastExtTkSerialization_x64.lib
		</Libraries>
		</conditional>
	</Configuration>
	
	<Files name="App" root="..\..\source\BlastPlugin">
		Render/Interface/*.h
		Render/Interface/*.cpp
		Scene/*.h
		Scene/*.cpp
		UI/*.ui
		UI/*.qrc
		Window/*.h
		Window/*.cpp
		Parameters/*.h
		Parameters/*.cpp
		*.h
		*.cpp
	</Files>
	<Files name="SampleBase" root="../../source/BlastPlugin/SampleBase" type="source">
		*.cpp
		*.h
		core/*.cpp
		core/*.h
		blast/*.cpp
		blast/*.h
		physx/*.cpp
		physx/*.h
		renderer/*.cpp
		renderer/*.h
		scene/*.cpp
		scene/*.h
		ui/*.cpp
		ui/*.h
		utils/*.cpp
		utils/*.h
		renderer/*.cpp
		renderer/*.h
	</Files>
	<Files name="SampleBase" root="${env:BLAST_PATH}/shared" type="source">
		utils/*.cpp
		utils/*.h
	</Files>
	<Files name="SampleBase" root="${env:IMGUI_PATH}" type="source">
		*.cpp
		*.h
	</Files>
	<Files name="SampleBase" root="${env:TINYOBJ_PATH}" type="source">
		*.cpp
		*.h
	</Files>
	<Files name="SampleBase" root="${env:BLAST_PATH}/sdk/globals/source" type="source">
		NvBlastGlobals.cpp
	</Files>
	<Files name="SampleBase" root="${env:BLAST_PATH}/sdk/extensions/authoring/source" type="source">
		NvBlastExtAuthoringAccelerator.cpp
		NvBlastExtAuthoringBooleanTool.cpp
		NvBlastExtAuthoringFractureToolImpl.cpp
		NvBlastExtAuthoringMeshImpl.cpp
		NvBlastExtAuthoringTriangulator.cpp
	</Files>
	<Files name="NsFoundation" root="${env:NsFoundation_ROOT}">
		src/*.cpp
		src/windows/*.cpp
	</Files>
	<Files name="NvFoundation" root="${env:NvFoundation_ROOT}">
		include/*.h
	</Files>
	<Files name="NvParameterized" root="${env:NvParameterized_ROOT}">
		src/*.cpp
	</Files>
	<Files name="NsFastXML" root="${env:NsFastXML_ROOT}">
		src/*.cpp
	</Files>
	<Files name="NvCommon" root="${env:NVCOMMON_ROOT}\Nv\Common">
		NvCoMemoryAllocator.h
		NvCoMemoryAllocator.cpp
		Platform/Win/NvCoWinMemoryAllocator.h
		Platform/Win/NvCoWinMemoryAllocator.cpp
		Animation/NvCoFrameCalculator.h
		Animation/NvCoFrameCalculator.cpp
	</Files>
	<Files name="Generated" root="..\Generated\BlastPlugin">
		ui/*.h
		moc/*.cpp
		qrc/*.cpp
	</Files>
	<Files name="Generated" root="..\Generated\CoreLib">
		moc/moc_SlideSpinBox.cpp
	</Files>
	<Files name="Shaders" root="..\..\source\Shaders">
	</Files>
	
	<apply-template name="blast_header_path"/>
</Target>

<Target name="RenderBlastDx11">
	<Dependencies type="link">
		RenderPluginDx11
		PluginBlast
	</Dependencies>
	<Configuration name="default" type="dll" show="false">
		<OutDir>..\..\..\..\bin\${env:VC_VERSION}win$(PlatformArchitecture)-cmake</OutDir>
	    <INTDIR>..\..\..\..\obj\${env:VC_VERSION}win$(PlatformArchitecture)-cmake\$(Configuration)\RenderBlastDx11</INTDIR>
		<Preprocessor type="define">
			PLUGINBTRENDER_LIB
		</Preprocessor>
	</Configuration>

	<Configuration name="Debug" platform="Win32">
		<apply-template name="win32Base"/>
		<apply-template name="debugBase"/>
	    <OutFile>$(ProjectName).win32.d.dll</OutFile>
		<SearchPaths root="" type="library">
			${env:FBXSDK_LIB_ROOT}/x86/debug
		</SearchPaths>
		<Libraries>
			CoreLib.win32.d.lib
			RenderPluginDx11.win32.d.lib
			PluginBlast.win32.d.lib
		</Libraries>
	</Configuration>

	<Configuration name="Debug" platform="win64">
		<apply-template name="win64Base"/>
		<apply-template name="debugBase"/>
	    <OutFile>$(ProjectName).win64.d.dll</OutFile>
		<SearchPaths root="" type="library">
			${env:FBXSDK_LIB_ROOT}/x64/debug
		</SearchPaths>
		<Libraries>
			CoreLib.win64.d.lib
			RenderPluginDx11.win64.d.lib
			PluginBlast.win64.d.lib
		</Libraries>
	</Configuration>

	<Configuration name="Release" platform="Win32">
		<apply-template name="win32Base"/>
		<apply-template name="releaseBase"/>
	    <OutFile>$(ProjectName).win32.dll</OutFile>
		<SearchPaths root="" type="library">
			${env:FBXSDK_LIB_ROOT}/x86/release
		</SearchPaths>
		<Libraries>
			CoreLib.win32.lib
			RenderPluginDx11.win32.lib
			PluginBlast.win32.lib
		</Libraries>
	</Configuration>

	<Configuration name="Release" platform="win64">
		<apply-template name="win64Base"/>
		<apply-template name="releaseBase"/>
	    <OutFile>$(ProjectName).win64.dll</OutFile>
		<SearchPaths root="" type="library">
			${env:FBXSDK_LIB_ROOT}/x64/release
		</SearchPaths>
		<Libraries>
			CoreLib.win64.lib
			RenderPluginDx11.win64.lib
			PluginBlast.win64.lib
		</Libraries>
	</Configuration>
	
	<Files name="App" root="..\..\source\BlastPlugin">
		Render/D3D11/*.h
		Render/D3D11/*.cpp
	</Files>
	<Files name="Shaders" root="..\..\source\Shaders">
		HairShaderAttribute.h
		BlastShader.hlsl
		BlastShaderOpt.hlsl
		BlastShadow.hlsl
		BlastShadowOpt.hlsl
	</Files>
</Target>

<conditional value="${env:VC_VERSION}" match="vc14">
<Target name="RenderBlastDx12">
	<WindowsTargetPlatformVersion>10.0.10240.0</WindowsTargetPlatformVersion>
	<Dependencies type="link">
		RenderPluginDx12
		PluginBlast
	</Dependencies>
	<Configuration name="default" type="dll" show="false">
		<OutDir>..\..\..\..\bin\${env:VC_VERSION}win$(PlatformArchitecture)-cmake</OutDir>
	    <INTDIR>..\..\..\..\obj\${env:VC_VERSION}win$(PlatformArchitecture)-cmake\$(Configuration)\RenderBlastDx12</INTDIR>
		<Preprocessor type="define">
			PLUGINBTRENDER_LIB
		</Preprocessor>
	</Configuration>

	<Configuration name="Debug" platform="Win32">
		<apply-template name="win32Base"/>
		<apply-template name="debugBase"/>
	    <OutFile>$(ProjectName).win32.d.dll</OutFile>
		<SearchPaths root="" type="library">
			${env:FBXSDK_LIB_ROOT}/x86/debug
		</SearchPaths>
		<Libraries>
			CoreLib.win32.d.lib
			RenderPluginDx12.win32.d.lib
			PluginBlast.win32.d.lib
		</Libraries>
	</Configuration>

	<Configuration name="Debug" platform="win64">
		<apply-template name="win64Base"/>
		<apply-template name="debugBase"/>
	    <OutFile>$(ProjectName).win64.d.dll</OutFile>
		<SearchPaths root="" type="library">
			${env:FBXSDK_LIB_ROOT}/x64/debug
		</SearchPaths>
		<Libraries>
			CoreLib.win64.d.lib
			RenderPluginDx12.win64.d.lib
			PluginBlast.win64.d.lib
		</Libraries>
	</Configuration>

	<Configuration name="Release" platform="Win32">
		<apply-template name="win32Base"/>
		<apply-template name="releaseBase"/>
	    <OutFile>$(ProjectName).win32.dll</OutFile>
		<SearchPaths root="" type="library">
			${env:FBXSDK_LIB_ROOT}/x86/release
		</SearchPaths>
		<Libraries>
			CoreLib.win32.lib
			RenderPluginDx12.win32.lib
			PluginBlast.win32.lib
		</Libraries>
	</Configuration>

	<Configuration name="Release" platform="win64">
		<apply-template name="win64Base"/>
		<apply-template name="releaseBase"/>
	    <OutFile>$(ProjectName).win64.dll</OutFile>
		<SearchPaths root="" type="library">
			${env:FBXSDK_LIB_ROOT}/x64/release
		</SearchPaths>
		<Libraries>
			CoreLib.win64.lib
			RenderPluginDx12.win64.lib
			PluginBlast.win64.lib
		</Libraries>
	</Configuration>
	
	<Files name="App" root="..\..\source\BlastPlugin">
		Render/D3D12/*.h
		Render/D3D12/*.cpp
	</Files>
	<Files name="Shaders" root="..\..\source\Shaders">
	</Files>
</Target>
</conditional>

<Target name="RenderPluginDx11">
	<Libraries>
		DXUT.lib
		DirectXTex.lib
		DXUTOpt.lib
	</Libraries>
	<Dependencies type="link">
		CoreLib
	</Dependencies>
	<Configuration name="default" type="dll" show="false">
		<OutDir>..\..\..\..\bin\${env:VC_VERSION}win$(PlatformArchitecture)-cmake</OutDir>
	    <INTDIR>..\..\..\..\obj\${env:VC_VERSION}win$(PlatformArchitecture)-cmake\$(Configuration)\RenderPluginDx11</INTDIR>
		<Preprocessor type="define">
			CORERENDER_LIB
		</Preprocessor>
	</Configuration>

	<Configuration name="Debug" platform="Win32">
		<apply-template name="win32Base"/>
		<apply-template name="debugBase"/>
	    <OutFile>$(ProjectName).win32.d.dll</OutFile>
		<SearchPaths root="" type="library">
			${env:DIRECTXTEX_PATH}/bin/dynamiccrt/${env:VS_STRING}/Win32/Debug
			${env:DXUT_PATH}/Core/Bin/dynamiccrt/${env:VS_STRING}/Win32/Debug
			${env:DXUT_PATH}/Optional/Bin/dynamiccrt/${env:VS_STRING}/Win32/Debug
		</SearchPaths>
		<Libraries>
			CoreLib.win32.d.lib
		</Libraries>
	</Configuration>

	<Configuration name="Debug" platform="win64">
		<apply-template name="win64Base"/>
		<apply-template name="debugBase"/>
	    <OutFile>$(ProjectName).win64.d.dll</OutFile>
		<SearchPaths root="" type="library">
			${env:DIRECTXTEX_PATH}/bin/dynamiccrt/${env:VS_STRING}/x64/Debug
			${env:DXUT_PATH}/Core/Bin/dynamiccrt/${env:VS_STRING}/x64/Debug
			${env:DXUT_PATH}/Optional/Bin/dynamiccrt/${env:VS_STRING}/x64/Debug
		</SearchPaths>
		<Libraries>
			CoreLib.win64.d.lib
		</Libraries>
	</Configuration>

	<Configuration name="Release" platform="Win32">
		<apply-template name="win32Base"/>
		<apply-template name="releaseBase"/>
	    <OutFile>$(ProjectName).win32.dll</OutFile>
		<SearchPaths root="" type="library">
			${env:DIRECTXTEX_PATH}/bin/dynamiccrt/${env:VS_STRING}/Win32/Release
			${env:DXUT_PATH}/Core/Bin/dynamiccrt/${env:VS_STRING}/Win32/Release
			${env:DXUT_PATH}/Optional/Bin/dynamiccrt/${env:VS_STRING}/Win32/Release
		</SearchPaths>
		<Libraries>
			CoreLib.win32.lib
		</Libraries>
	</Configuration>

	<Configuration name="Release" platform="win64">
		<apply-template name="win64Base"/>
		<apply-template name="releaseBase"/>
	    <OutFile>$(ProjectName).win64.dll</OutFile>
		<SearchPaths root="" type="library">
			${env:DIRECTXTEX_PATH}/bin/dynamiccrt/${env:VS_STRING}/x64/Release
			${env:DXUT_PATH}/Core/Bin/dynamiccrt/${env:VS_STRING}/x64/Release
			${env:DXUT_PATH}/Optional/Bin/dynamiccrt/${env:VS_STRING}/x64/Release
		</SearchPaths>
		<Libraries>
			CoreLib.win64.lib
		</Libraries>
	</Configuration>
	
	<Files name="App" root="..\..\source\CoreLib">
		Render/D3D11/*.h
		Render/D3D11/*.cpp
	</Files>
</Target>

<conditional value="${env:VC_VERSION}" match="vc14">
<Target name="RenderPluginDx12">
	<WindowsTargetPlatformVersion>10.0.10240.0</WindowsTargetPlatformVersion>
	<Libraries>
		legacy_stdio_definitions.lib
		DXUT.lib
		DirectXTex.lib
		DXUTOpt.lib
	</Libraries>
	<Dependencies type="link">
		CoreLib
	</Dependencies>
	<Configuration name="default" type="dll" show="false">
		<OutDir>..\..\..\..\bin\${env:VC_VERSION}win$(PlatformArchitecture)-cmake</OutDir>
	    <INTDIR>..\..\..\..\obj\${env:VC_VERSION}win$(PlatformArchitecture)-cmake\$(Configuration)\RenderPluginDx12</INTDIR>
		<Preprocessor type="define">
			CORERENDER_LIB
			_WINDOWS
			_WIN32_WINNT=0x0600
			_CRT_SECURE_NO_DEPRECATE
			_LIB
		</Preprocessor>
	</Configuration>

	<Configuration name="Debug" platform="Win32">
		<apply-template name="win32Base"/>
		<apply-template name="debugBase"/>
	    <OutFile>$(ProjectName).win32.d.dll</OutFile>
		<SearchPaths root="" type="library">
			${env:DIRECTXTEX_PATH}/bin/dynamiccrt/${env:VS_STRING}/Win32/Debug
			${env:DXUT_PATH}/Core/Bin/dynamiccrt/${env:VS_STRING}/Win32/Debug
			${env:DXUT_PATH}/Optional/Bin/dynamiccrt/${env:VS_STRING}/Win32/Debug
		</SearchPaths>
		<Libraries>
			d3d12.lib
			CoreLib.win32.d.lib
		</Libraries>
	</Configuration>

	<Configuration name="Debug" platform="win64">
		<apply-template name="win64Base"/>
		<apply-template name="debugBase"/>
	    <OutFile>$(ProjectName).win64.d.dll</OutFile>
		<SearchPaths root="" type="library">
			${env:DIRECTXTEX_PATH}/bin/dynamiccrt/${env:VS_STRING}/x64/Debug
			${env:DXUT_PATH}/Core/Bin/dynamiccrt/${env:VS_STRING}/x64/Debug
			${env:DXUT_PATH}/Optional/Bin/dynamiccrt/${env:VS_STRING}/x64/Debug
		</SearchPaths>
		<Libraries>
			d3d12.lib
			CoreLib.win64.d.lib
		</Libraries>
	</Configuration>

	<Configuration name="Release" platform="Win32">
		<apply-template name="win32Base"/>
		<apply-template name="releaseBase"/>
	    <OutFile>$(ProjectName).win32.dll</OutFile>
		<SearchPaths root="" type="library">
			${env:DIRECTXTEX_PATH}/bin/dynamiccrt/${env:VS_STRING}/Win32/Release
			${env:DXUT_PATH}/Core/Bin/dynamiccrt/${env:VS_STRING}/Win32/Release
			${env:DXUT_PATH}/Optional/Bin/dynamiccrt/${env:VS_STRING}/Win32/Release
		</SearchPaths>
		<Libraries>
			d3d12.lib
			CoreLib.win32.lib
		</Libraries>
	</Configuration>

	<Configuration name="Release" platform="win64">
		<apply-template name="win64Base"/>
		<apply-template name="releaseBase"/>
	    <OutFile>$(ProjectName).win64.dll</OutFile>
		<SearchPaths root="" type="library">
			${env:DIRECTXTEX_PATH}/bin/dynamiccrt/${env:VS_STRING}/x64/Release
			${env:DXUT_PATH}/Core/Bin/dynamiccrt/${env:VS_STRING}/x64/Release
			${env:DXUT_PATH}/Optional/Bin/dynamiccrt/${env:VS_STRING}/x64/Release
		</SearchPaths>
		<Libraries>
			d3d12.lib
			CoreLib.win64.lib
		</Libraries>
	</Configuration>
	
	<Files name="App" root="..\..\source\CoreLib">
		Render/D3D12/*.h
		Render/D3D12/*.cpp
	</Files>
	<Files name="NvCommon" root="${env:NVCOMMON_ROOT}\Nv\Common\Platform\Dx12">
		NvCoDx12DescriptorHeap.h
		NvCoDx12DescriptorHeap.cpp
	</Files>
</Target>
</conditional>

</Project>

</XPJ>
