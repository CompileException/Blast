#
# Build NvBlastExtConverterLL Common
#


SET(COMMON_SOURCE_DIR ${PROJECT_SOURCE_DIR}/common)
SET(CONVERTERLL_EXT_SOURCE_DIR ${PROJECT_SOURCE_DIR}/extensions/converter/source)
SET(CONVERTERLL_EXT_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/extensions/converter/include)


# Include here after the directories are defined so that the platform specific file can use the variables.
include(${PROJECT_CMAKE_FILES_DIR}/${TARGET_BUILD_PLATFORM}/NvBlastExtConverterLL.cmake)

SET(COMMON_FILES
	${BLASTEXT_PLATFORM_COMMON_FILES}
	
	${COMMON_SOURCE_DIR}/NvBlastAssert.cpp
	${COMMON_SOURCE_DIR}/NvBlastAssert.h
)

SET(PUBLIC_FILES
	${CONVERTERLL_EXT_INCLUDE_DIR}/NvBlastExtDataConverter.h
)

SET(EXT_CONVERSION_FILES
	${CONVERTERLL_EXT_SOURCE_DIR}/conversion/NvBlastExtAssetBlockVersionConverter_v0_v1.h
	${CONVERTERLL_EXT_SOURCE_DIR}/conversion/NvBlastExtBinaryBlockConverter.cpp
	${CONVERTERLL_EXT_SOURCE_DIR}/conversion/NvBlastExtBinaryBlockConverter.h
	${CONVERTERLL_EXT_SOURCE_DIR}/conversion/NvBlastExtDataConverter.cpp
)

ADD_LIBRARY(NvBlastExtConverterLL STATIC
	${COMMON_FILES}
	${PUBLIC_FILES}

	${EXT_CONVERSION_FILES}
)

SOURCE_GROUP("common" FILES ${COMMON_FILES})
SOURCE_GROUP("public" FILES ${PUBLIC_FILES})
SOURCE_GROUP("src\\conversion" FILES ${EXT_CONVERSION_FILES})


# Target specific compile options

TARGET_INCLUDE_DIRECTORIES(NvBlastExtConverterLL 
	PRIVATE ${BLASTEXT_PLATFORM_INCLUDES}

	PUBLIC ${PROJECT_SOURCE_DIR}/converter/include
	PUBLIC ${CONVERTERLL_EXT_INCLUDE_DIR}

	PRIVATE ${CONVERTERLL_EXT_SOURCE_DIR}/conversion
	PRIVATE ${PROJECT_SOURCE_DIR}/common
)

TARGET_COMPILE_DEFINITIONS(NvBlastExtConverterLL
	PRIVATE ${BLASTEXT_COMPILE_DEFS}
)

# Warning disables for Capn Proto
TARGET_COMPILE_OPTIONS(NvBlastExtConverterLL
	PRIVATE ${BLASTEXT_PLATFORM_COMPILE_OPTIONS}
)

SET_TARGET_PROPERTIES(NvBlastExtConverterLL PROPERTIES 
	PDB_NAME_DEBUG "NvBlastExtConverterLL${CMAKE_DEBUG_POSTFIX}"
	PDB_NAME_CHECKED "NvBlastExtConverterLL${CMAKE_CHECKED_POSTFIX}"
	PDB_NAME_PROFILE "NvBlastExtConverterLL${CMAKE_PROFILE_POSTFIX}"
	PDB_NAME_RELEASE "NvBlastExtConverterLL${CMAKE_RELEASE_POSTFIX}"
)

# Do final direct sets after the target has been defined
#TARGET_LINK_LIBRARIES(NvBlastExtConverterLL NvBlast ${PHYSXSDK_LIBRARIES} ${APEXSDK_LIBRARIES} ${PXSHAREDSDK_LIBRARIES})
TARGET_LINK_LIBRARIES(NvBlastExtConverterLL 
	PUBLIC NvBlast 
	PUBLIC ${BLASTEXT_PLATFORM_LINKED_LIBS}
)
