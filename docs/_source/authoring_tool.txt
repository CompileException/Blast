/*! \page pageauthoring AuthoringTool

The application <b>AuthoringTool</b> is a command-line asset authoring utility.  It reads a file containing a single graphics mesh
(currently .fbx and .obj format are supported in this tool), and fractures it according to the parameters given in the command line.
The user can configure the output of the tool. It can save render mesh geometry to .fbx or .obj files. It also optionally could save 
collision geometry in the same .fbx file.

Additionally, the user can choose how Blast&tm; data should be saved (in .blast file):

  1) LL-asset which is Low Level asset data (NvBlastAsset). Default mode.

  2) Tk-asset which is Toolkit asset data (Nv::Blast::TkAsset).

	3) ExtPx-asset which incorporates Blast&tm; data and collision geometry for physics engine (Nv::Blast::ExtPxAsset). 

.blast and .obj files may be consumed by the \ref pagesampleassetviewer.


\verbatim



USAGE: 

   AuthoringTool_x64.exe  [--ovar <by default
                            0.0>] [--avar <by default 0.0>]
                            [--slices <by default 1 1 1>]
                            [--radius <by default 1.0>]
                            [--clusters <by default 5>]
                            [--cells <by default 5>] [--mode <v
                            - voronoi, c - clustered voronoi, s
                            - slicing.>] [--nonskinned]
                            [--fbxcollision] [--fbx] [--obj]
                            [--fbxascii] [--tk] [--px]
                            [--clean] [--outputDir <by default
                            directory of the input file>] [--]
                            [--version] [-h] <infile> <output
                            asset name>


Where: 

   --ovar <by default 0.0>
     Slicing offset variation

   --avar <by default 0.0>
     Slicing angle variation

   --slices <by default 1 1 1>
     Number of slices per direction

   --radius <by default 1.0>
     Clustered Voronoi cluster radius

   --clusters <by default 5>
     Uniform Voronoi cluster count

   --cells <by default 5>
     Voronoi cells count

   --mode <v - voronoi, c - clustered voronoi, s - slicing.>
     Fracturing mode

   --nonskinned
     Output a non-skinned FBX file

   --fbxcollision
     Add collision geometry to FBX file

   --fbx
     Output a FBX mesh to the output directory

   --obj
     Output a OBJ mesh to the output directory

   --fbxascii
     Output FBX as an ascii file (defaults to binary output)

   --tk
     Output TkAsset to the .blast file in the output directory instead of
     LL Blast asset (NvBlastAsset).

   --px
     Output ExtPxAsset to the .blast file in the output directory instead
     of LL Blast asset (NvBlastAsset).

   --clean
     Try cleaning mesh before fracturing

   --outputDir <by default directory of the input file>
     Output directory

   --,  --ignore_rest
     Ignores the rest of the labeled arguments following this flag.

   --version
     Displays version information and exits.

   -h,  --help
     Displays usage information and exits.

   <infile>
     (required)  File to load

   <output asset name>
     (required)  Output asset name


   Blast SDK: Authoring Tool




\endverbatim

<br>
See \ref pagecopyrights for license information regarding third-party software used by ApexImporter.

<br>
*/
